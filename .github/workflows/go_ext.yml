name: Go

on:
  push:
    paths:
      - 'extension/tgbot/**'
    branches: [ master ]
  pull_request:
    paths:
      - 'extension/tgbot/**'
    branches: [ master ]

jobs:

  checkout:
    name: Check out code
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./extension/tgbot
    steps:
      - name: Check out code
        uses: actions/checkout@v2

  setup:
    needs: checkout
    name: Set up Go
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./extension/tgbot
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

  deps:
    needs: setup
    name: Get dependencies
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./extension/tgbot
    steps:
      - name: Get dependencies
        run: go mod download

  fmt:
    needs: deps
    name: Format
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./extension/tgbot
    steps:
      - name: Format
        run: test -z $(gofmt -l .)

  lint:
    needs: fmt
    name: Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./extension/tgbot
    steps:
      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest

  build:
    needs: lint
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./extension/tgbot
    steps:
      - name: Build
        run: go build -v ./...

  test:
    needs: build
    name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./extension/tgbot
    steps:
      - name: Test
        run: go test -v ./...

  docker:
    needs: test
    name: Docker
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./extension/tgbot
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./extension/tgbot
          push: true
          tags: iamthen0ise/w2r-tgbot:latest
